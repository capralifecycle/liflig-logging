<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>no.liflig</groupId>
    <artifactId>kotlin-parent</artifactId>
    <version>3.20250328.083543</version>
  </parent>

  <!--suppress MavenRedundantGroupId -->
  <groupId>no.liflig</groupId>
  <artifactId>liflig-logging</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>

  <name>liflig-logging</name>
  <description>
    Logging library for Kotlin JVM, that thinly wraps SLF4J and Logback to provide a more ergonomic API.
  </description>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://github.com/capralifecycle/liflig-logging/blob/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Liflig</name>
    <url>https://liflig.no/</url>
  </organization>

  <properties>
    <major-version>2</major-version>
    <revision>${major-version}.local-SNAPSHOT</revision>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Logging -->
    <slf4j.version>2.0.17</slf4j.version>
    <logback.version>1.5.18</logback.version>
    <logstash-logback-encoder.version>8.0</logstash-logback-encoder.version>

    <!-- Serialization -->
    <kotlinx-serialization.version>1.8.0</kotlinx-serialization.version>
    <jackson.version>2.18.3</jackson.version>

    <!-- Testing -->
    <junit.version>5.12.1</junit.version>
    <kotest.version>5.9.1</kotest.version>

    <!-- Maven plugins -->
    <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
    <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
    <flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
  </properties>

  <dependencies>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <!--
        This library works for any SLF4J logger implementation, but makes some optimizations for Logback. If the user
        chooses Logback as their logger implementation, we can apply these optimizations, but if they don't, then we
        don't want to load Logback, as that can interfere with other SLF4J logger implementations on the classpath.
      -->
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
      <!--
        Optional - we only need this if the user:
        - Has chosen Logback as their logger implementation
        - Uses logstash-logback-encoder for encoding logs as JSON
        - Wants to use our LoggingContextJsonFieldWriter
      -->
      <optional>true</optional>
    </dependency>

    <!-- Serialization -->
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-serialization-json</artifactId>
      <version>${kotlinx-serialization.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-assertions-core-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <scm>
    <developerConnection>scm:git:https://github.com/capralifecycle/liflig-logging.git</developerConnection>
    <connection>scm:git:https://github.com/capralifecycle/liflig-logging.git</connection>
    <url>https://github.com/capralifecycle/liflig-logging</url>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/*</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/capralifecycle/liflig-logging</url>
    </repository>
  </distributionManagement>

  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <args>
            <!-- Require explicit public modifiers, to avoid accidentally publishing internal APIs -->
            <arg>-Xexplicit-api=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Formatting with ktfmt -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <kotlin>
            <toggleOffOn/>
            <ktfmt>
              <version>${ktfmt.version}</version>
              <style>META</style>
            </ktfmt>
          </kotlin>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Testing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

      <!--
        Install JAR in integration-tests/local-maven-repo, so integration tests can use it.
        See integration-tests/README.md for more on how integration tests are set up here.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>./target/liflig-logging-${project.version}.jar</file>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>2.local-SNAPSHOT</version>
              <packaging>${project.packaging}</packaging>
              <localRepositoryPath>./integration-tests/local-maven-repo</localRepositoryPath>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Purge liflig-logging from cache, to make sure we use newest snapshot in integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <phase>clean</phase>
            <goals>
              <goal>purge-local-repository</goal>
            </goals>
            <configuration>
              <manualIncludes>
                <include>no.liflig:liflig-logging</include>
              </manualIncludes>
              <snapshotsOnly>true</snapshotsOnly>
              <reResolve>false</reResolve>
              <actTransitively>false</actTransitively>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Run integration tests from integration-tests subdirectory.
        See integration-tests/README.md for more on how integration tests are set up here.
      -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>mvn</executable>
              <arguments>
                <argument>clean</argument>
                <argument>test</argument>
                <argument>-f=./integration-tests</argument>
                <argument>-Dstyle.color=always</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin for enforcing proper dependency management -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
                <dependencyConvergence/>
                <requireUpperBoundDeps/>
                <banDynamicVersions/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
